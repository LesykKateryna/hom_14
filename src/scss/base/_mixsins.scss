/// Animate css properties
// usage
// scss - @include animate(color);
//     or @include animate(color width);
//     or @include animate(color width, 1s, linear);

///  @include media('>=358px', '<850px') { }
///
/// @example scss - With set breakpoints with custom values
///  @include media('>desktop', '<=1350px') { }
///
/// @example scss - With a static expression
///  @include media('retina2x') { }
///
/// @example scss - Mixing everything
///  @include media('>=350px', '<tablet', 'retina3x') { }
///
@mixin media($conditions...) {
    @if ($im-media-support and length($conditions) == 0) or
          (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {
       @content;
    } @else if ($im-media-support and length($conditions) > 0) {
       @media #{unquote(parse-expression(nth($conditions, 1)))} {
          // Recursive call
          @include media(slice($conditions, 2)...) {
             @content;
          }
       }
    }
 }

$animation-speed: .3s !default;

@mixin animate($properties, $duration: $animation-speed, $easing: ease) {
   $list:();
   @each $prop in $properties {
      $str: #{$prop} #{$duration} #{$easing};
      $list: join($list, #{$str}, comma);
   }
   transition: $list;
}